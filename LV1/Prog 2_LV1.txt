Zadatak 1.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

int main()
{
    srand((unsigned)time(NULL));

    int positive, negative, binaryPositive[16], binaryNegative[16], flagOne = 0;

    do {
        positive = rand();
    } while (positive <= 0);

    do{
        negative = rand() * (-1);
    } while (negative >= 0);

    printf("Positive: %d\n", positive);
    printf("Negative: %d\n", negative);

    //positivan i negativan
    for (int i = 15; i >= 0; i--) {
        binaryPositive[i] = positive % 2;
        binaryNegative[i] = abs(negative) % 2;
        positive /= 2;
        negative /= 2;
    }

    for (int i = 15; i >= 0; i--) {

        if (flagOne == 1) {
            if (binaryNegative[i] == 1) binaryNegative[i] = 0;
            else binaryNegative[i] = 1;
        }

        if (binaryNegative[i] == 1) flagOne = 1;
    }

    printf("Positive binary: ");
    for (int i = 0; i < 16; i++) {
        if (i % 4 == 0) printf(" ");
        printf("%d", binaryPositive[i]);
    }

    printf("\n");

    printf("Negative binary: ");
    for (int i = 0; i < 16; i++) {
        if (i % 4 == 0) printf(" ");
        printf("%d", binaryNegative[i]);
    }

    return 0;
}

//////////////////////////////////////////////////////////////////////

Zadatak 2.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

int main()
{
    srand((unsigned)time(NULL));

    int binaryNumber2[32], binaryNumber1[32], flagOne = 0;
    float number1, number2;
    int potNum1 = 0, potNum2 = 0, expNum1, expNum2;

    number1 = (float)rand() / (float)(RAND_MAX / 9999.0);
    number2 = (float)rand() / (float)(RAND_MAX / 9999.0);

    printf("Number1: %f\n", number1);
    printf("Number2: %f\n", number2);

    binaryNumber1[0] = 0;
    binaryNumber2[0] = 0;

    //positivan i negativan
    if (number1 < 0) {
        number1 *= -1;
        binaryNumber1[0] = 1;
    }
    if (number2 < 0) {
        number2 *= -1;
        binaryNumber2[0] = 1;
    }

    //number 1
    while (number1 >= 2) {
        potNum1++;
        number1 /= 2.0;
    }

    while (number1 < 1) {
        potNum1--;
        number1 *= 2.0;
    }

    //number 2
    while (number2 >= 2) {
        potNum2++;
        number2 /= 2.0;
    }

    while (number2 < 1) {
        potNum2--;
        number2 *= 2.0;
    }

    expNum1 = 127 + potNum1;
    expNum2 = 127 + potNum2;

    for (int i = 8; i >= 1; i--) {
        binaryNumber1[i] = expNum1 % 2;
        binaryNumber2[i] = expNum2 % 2;
        expNum1 /= 2.0;
        expNum2 /= 2.0;
    }

    number1 -= 1;
    number2 -= 1;

    //number 1
    for (int i = 9; i < 32; i++)
    {
        number1 *= 2.0;
        if (number1 >= 1)
        {
            binaryNumber1[i] = 1;
            number1 -= 1.0;
        }
        else
            binaryNumber1[i] = 0;
    }
     
    //number 2
    for (int i = 9; i < 32; i++)
    {
        number2 *= 2.0;
        if (number2 >= 1)
        {
            binaryNumber2[i] = 1;
            number2 -= 1.0;
        }
        else
            binaryNumber2[i] = 0;
    }

    //ispis
    printf("Number1 binary: ");
    for (int i = 0; i < 32; i++) {
        if (i % 8 == 0) printf(" ");
        printf("%d", binaryNumber1[i]);
    }

    printf("\n");

    printf("Number2 binary: ");
    for (int i = 0; i < 32; i++) {
        if (i % 8 == 0) printf(" ");
        printf("%d", binaryNumber2[i]);
    }

    return 0;
}

///////////////////////////////////////////////////////////////////////////////

Zadatak 3.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

int main()
{
    char binaryNumber[16], bit;
    int flagNegative = 0, flagFirstOne = 0, numberInt = 0, power = 1;

    for (int i = 0; i < 16; i++) {
        do {
            bit = _getch();
        } while (bit < '0' || bit > '1');
        if (i % 4 == 0) printf(" ");
        binaryNumber[i] = bit;
        printf("%d", binaryNumber[i] - 48);
    }

    if (binaryNumber[0] == '1') flagNegative = 1;

    for (int i = 15; i >= 0; i--) {

        if (flagNegative == 1) {
            if (flagFirstOne == 1) {
                if (binaryNumber[i] == '0') binaryNumber[i] = '1';
                else binaryNumber[i] = '0';
            }
        }

        if (binaryNumber[i] == '1') flagFirstOne = 1;
    }

    for (int i = 15; i >= 0; i--) {
        if (binaryNumber[i] == '1') numberInt += power;
        power *= 2;
    }

    printf("\n%d", flagNegative == 1 ? -numberInt : numberInt);

    return 0;
}

//////////////////////////////////////////////////////

Zadatak 4.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

int main()
{
    int binaryNumber[32], flagNegative = 0, flagFirstOne = 0, power = 1, numberInt;

    //scanf("%d", &numberInt);
    scanf_s("%d", &numberInt);

    if (numberInt < 0) flagNegative = 1;

    for (int i = 31; i >= 0; i--) {
        binaryNumber[i] = abs(numberInt) % 2;
        numberInt /= 2;
    }

    for (int i = 31; i >= 0; i--) {
       
        if (flagNegative == 1) {
            if (flagFirstOne == 1) {
                if (binaryNumber[i] == 1) binaryNumber[i] = 0;
                else binaryNumber[i] = 1;
            }
        }

        if (binaryNumber[i] == 1) flagFirstOne = 1;
    }

    for (int i = 0; i < 32; i++) {
        if (i % 8 == 0) printf(" ");
        printf("%d", binaryNumber[i]);
    }

    return 0;
}

///////////////////////////////////////////////////////////////////////

Zadatak 5.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

int main()
{
    int binaryNumber[32], flagNegative = 0, exp, power = 1, pot = 0;
    float numberFloat;
    binaryNumber[0] = 0;

    //scanf("%d", &numberInt);
    scanf_s("%f", &numberFloat);

    if (numberFloat < 0) {
        numberFloat *= -1;
        binaryNumber[0] = 1;
    }

    while (fabs(numberFloat) >= 2) {
        pot++;
        numberFloat /= 2.0;
    }

    while (fabs(numberFloat) < 1) {
        pot--;
        numberFloat *= 2.0;
    }

    exp = 127 + pot;

    for (int i = 8; i >= 1; i--) {
        binaryNumber[i] = exp % 2;
        exp /= 2;
    }

    numberFloat -= 1;

    for (int i = 9; i < 32; i++) {
       
        numberFloat *= 2.0;
        if (numberFloat >= 1)
        {
            binaryNumber[i] = 1;
            numberFloat -= 1.0;
        }
        else
            binaryNumber[i] = 0;
    }

    for (int i = 0; i < 32; i++) {
        if (i % 8 == 0) printf(" ");
        printf("%d", binaryNumber[i]);
    }

    return 0;
}

///////////////////////////////////////////////////////////////

Zadatak 6.

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <math.h>
#include <time.h>

#define CRT_SECURE_NO_WARNINGS

void BinaryFloat(float numberFloat) {
    int binaryNumber[32], exp, pot = 0;
    binaryNumber[0] = 0;

    if (numberFloat < 0) {
        numberFloat *= -1;
        binaryNumber[0] = 1;
    }

    while (numberFloat >= 2) {
        pot++;
        numberFloat /= 2.0;
    }

    while (numberFloat < 1) {
        pot--;
        numberFloat *= 2.0;
    }

    exp = 127 + pot;

    for (int i = 8; i >= 1; i--) {
        binaryNumber[i] = exp % 2;
        exp /= 2;
    }

    numberFloat -= 1;

    for (int i = 9; i < 32; i++) {
        numberFloat *= 2;
        if (numberFloat >= 1)
        {
            binaryNumber[i] = 1;
            numberFloat -= 1.0;
        }
        else
            binaryNumber[i] = 0;
    }

    for (int i = 0; i < 32; i++) {
        if (i % 8 == 0) printf(" ");
        printf("%d", binaryNumber[i]);
    }
}

int main()
{
    float numberFloat;

    scanf_s("%f", &numberFloat);

    BinaryFloat(numberFloat);

    return 0;
}